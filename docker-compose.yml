version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: pos-system-app
    restart: unless-stopped
    working_dir: /var/www/html
    volumes:
      - ./:/var/www/html
      - /var/www/html/storage
      - /var/www/html/bootstrap/cache
    environment:
      - APP_NAME="POS System"
      - APP_ENV=production
      - APP_KEY=base64:rk6js0QfTJhxWvOCokNijesX7ToeHcF2zbtmekxkScc=
      - APP_DEBUG=false
      - LOG_LEVEL=error
      - DB_CONNECTION=mysql
      - DB_HOST=pos-system-db
      - DB_PORT=3306
      - DB_DATABASE=pos_system
      - DB_USERNAME=pos_user
      - DB_PASSWORD=pos_password
      - BROADCAST_CONNECTION=log
      - CACHE_STORE=database
      - QUEUE_CONNECTION=database
      - SESSION_DRIVER=database
      - SESSION_LIFETIME=120
    networks:
      - pos-network

  db:
    image: mysql:8.0
    container_name: pos-system-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: pos_system
      MYSQL_USER: pos_user
      MYSQL_PASSWORD: pos_password
      MYSQL_ROOT_PASSWORD: root_password
    volumes:
      - pos-mysql-data:/var/lib/mysql
      - ./docker/mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - pos-network
    command: [
      '--default-authentication-plugin=mysql_native_password',
      '--character-set-server=utf8mb4',
      '--collation-server=utf8mb4_unicode_ci',
      '--innodb-flush-method=async',
      '--innodb-use-native-aio=0'
    ]

  nginx:
    image: nginx:alpine
    container_name: pos-system-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - pos-network

networks:
  pos-network:
    driver: bridge

volumes:
  pos-mysql-data:
    driver: local