name: Build and Release Electron App

on:
  push:
    tags:
      - 'v*'
  release:
    types: [ published ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: pdo, pdo_mysql, mbstring, zip, gd, xml, ctype, iconv, intl, pdo, sqlite, pdo_sqlite, bcmath, dom, filter, gd, iconv, mbstring, pdo, tokenizer

    - name: Install dependencies
      run: |
        composer install --no-dev --optimize-autoloader
        npm ci

    - name: Build application
      run: npm run build

    - name: Build Electron app (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: npm run electron-pack
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Electron app (Windows)
      if: matrix.os == 'windows-latest'
      run: npm run electron-pack
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Build Electron app (macOS)
      if: matrix.os == 'macos-latest'
      run: npm run electron-pack
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-build
        path: dist/
        retention-days: 30

    - name: Release
      uses: softprops/action-gh-release@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: dist/**
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}